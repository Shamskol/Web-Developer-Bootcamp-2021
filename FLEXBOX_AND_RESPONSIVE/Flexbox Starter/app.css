body {
    font-family: 'Open Sans', sans-serif;
}
h1 {
    text-align: center;
}
/* Ihe main axis is determined by the flex-direction property
and it could be row(default) or column. It should be noted that 
for the flex direction to work it should be preceded by the display
property with the value of flex.*/

    

#container1 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: row;
    
}

 div {
    width: 200px;
    height: 200px;
    color:white;
}
/* flex-direction set to row-reverse and main axis is right to left*/
#container2 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: row-reverse;
    
}
/* flex-direction set to column*/
#container3 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    flex-flow:  column;
    
}
/*flex-direction set to column-reverse*/
#container4 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: column-reverse;
    
}
/*The flex-flow property lets you control both the direction in which 
the items are displayed and whether or not they can wrap on to the next
 line. Flex-flow requires two values separated by a space. The first is
  the direction(ie row/row-reverse/column/column-reverse) and the 
  second is whether the item can wrap(ie nowrap/wrap/wrap-reverse)
  NOTE THAT THE FLEX-FLOW PROPERTY IS SHORTHAND FOR TWO OTHER RELATED
  CSS PROPERTIES FLEX-DIRECTION AND FLEX-WRAP*/
#container5 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    /* flex-direction: column-reverse;
    flex-wrap:wrap; */
    flex-flow: column-reverse wrap;
    
}
#container6 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    flex-flow: column wrap;
    
}
/*JUSTIFY CONTENT The justify-content property determines 
where a browser should place the flex items within the row.
The property works if the flex items have set widths and 
if the total width of the items* is less than the flex 
container. There are five possible values for the property:
 .flex-start: aligns items to the left of the row
 . flex-end: aligns items to the right side of the row
 . center: centers the flex items in the middle of the container
 .space-between: evenly spaces out the flex items, dividing
  the space between them equally while aligning leftmost
  item to the left and the rightmost item to the right
  .space-around evenly: distributes the leftover space within the
   container around all the adding space to the left-
   and rightmost items as well*/
#container7 {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    justify-content: space-between;
}
#container8 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    justify-content: flex-start;    
}
.container {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    justify-content: space-around;    
}
#container9 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    justify-content: flex-end;    
}
#container10 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    justify-content: center;    
}
/* ALIGN ITEMS The align-items property determines
 how the items of of different heights are vertically 
 placed within the container. There are five possible 
 values:
    . flex-start: aligns the tops of all items to
      the top of the container
    . flex-end: aligns the bottoms of all items to
      the bottom of the container
    . center: aligns the vertical centers of all flex items
      to the vertical center of the container
    . baseline: aligns the baseline of the first element
      within each flex
    . stretch: this stretches each item in the container to the same height*/
 #container11 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    align-items: flex-start;    
}
#container12 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    align-items:flex-end;    
}
#container13 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    align-items: center;    
}
#container14 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    align-items: baseline;    
}
#container15 {
    background-color: red;
    width: 90%;
    height: 500px;
    margin: 10px auto;
    border: 5px solid #003049;
    display: flex;
    align-items: stretch;    
}



